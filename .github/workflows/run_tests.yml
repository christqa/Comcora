name: UI Tests

on: push

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    env:
      HEADLESS: "true"
      BROWSER: "chrome"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg unzip
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install jq
        run: |
          sudo apt-get install -y jq

      - name: Install ChromeDriver (matching Chrome version)
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+\.\d+')
          echo "Detected Chrome version: $CHROME_VERSION"
          
          DRIVER_URL=$(curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json | \
          jq -r '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64") | .url')
          
          wget -q "$DRIVER_URL" -O chromedriver.zip
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'



      - name: Start the frontend server
        run: |
          cd comcora-web-app-main
           nohup npm run dev &
          sleep 10  

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Start app
        run: npm run dev &

      - name: Wait for app to be ready
        run: |
          for i in {1..30}; do
            if curl -fs http://localhost:3000/en; then
              echo "App is ready!"
              break
            fi
            echo "Waiting for app to start... ($i)"
            sleep 2
          done


      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -v




